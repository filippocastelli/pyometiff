name: Bump, Tag & Publish

on:
  workflow_dispatch:
    inputs:
      part:
        description: 'Version part to bump (patch, minor, major)'
        required: true
        default: 'patch'

permissions:
  id-token: write         # For PyPI trusted publishing (OIDC)
  contents: write         # For pushing tags and creating GitHub releases
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry and bump-my-version
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry self add bump-my-version

      - name: Install dependencies
        run: poetry install --no-root

      - name: Bump version
        id: bump
        run: |
          version=$(poetry run bump-my-version bump ${{ github.event.inputs.part }} --allow-dirty --list | grep new_version= | cut -d= -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Run tests
        run: poetry run pytest

      - name: Commit and push version bump
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git commit -am "Bump version to ${{ steps.bump.outputs.version }}"
          git tag v${{ steps.bump.outputs.version }}
          git push origin HEAD
          git push origin v${{ steps.bump.outputs.version }}

      - name: Build package
        run: poetry build

      - name: Publish to PyPI via OIDC
        run: poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_OIDC_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: Release v${{ steps.bump.outputs.version }}
          generate_release_notes: true
